# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Create JAR Package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Build Project and Create Docker image using Gradle
        run: ./gradlew bootJar
      - name: Extract Gradle Project Name
        run: echo "PROJECT_NAME_ENV_VAR=$(./gradlew properties --no-daemon --console=plain -q | grep "^name:" | awk '{printf $2}')" >> $GITHUB_ENV
      - name: Extract Gradle Project Version
        run: echo "PROJECT_VERSION_ENV_VAR=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')" >> $GITHUB_ENV
      - name: Show extracted Gradle project version
        run: echo $PROJECT_NAME_ENV_VAR:$PROJECT_VERSION_ENV_VAR
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: $PROJECT_NAME_ENV_VAR-$PROJECT_VERSION_ENV_VAR.jar
          path: target/$PROJECT_NAME_ENV_VAR-$PROJECT_VERSION_ENV_VAR.jar
          compression-level: 0 # no compression
